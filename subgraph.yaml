specVersion: 0.0.2
description: DAOHaus Supergraph
repository: 'https://github.com/HausDAO/daohaus-supergraph'
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: V21Factory
    network: goerli
    source:
      address: '0x72B8Bf40C8B316753a3E470689DA625759D2b025'
      abi: V21Factory
      startBlock: 7103207
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Register
      abis:
        - name: V21Factory
          file: ./abis/V21Factory.json
        - name: Erc20
          file: ./abis/Erc20.json
        - name: Erc20Bytes32
          file: ./abis/Erc20Bytes32.json
      eventHandlers:
        - event: >-
            SummonComplete(indexed
            address,address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[])
          handler: handleSummonV21
        - event: 'Register(uint256,address,string,string,uint256)'
          handler: handleRegisterV21
      file: ./src/factory-mapping.ts
  - kind: ethereum/contract
    name: V22Factory
    network: goerli
    source:
      address: '0xA8680d0E43aDe8BC32eCCF6C446eCe4CA15d4258'
      abi: V22Factory
      startBlock: 7104213
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Register
      abis:
        - name: V22Factory
          file: ./abis/V22Factory.json
        - name: Erc20
          file: ./abis/Erc20.json
        - name: Erc20Bytes32
          file: ./abis/Erc20Bytes32.json
      eventHandlers:
        - event: >-
            SummonComplete(indexed
            address,address,address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleSummonV22
      file: ./src/v22-factory-mapping.ts
  - kind: ethereum/contract
    name: Poster
    network: goerli
    source:
      address: '0x3c1f4802be7e26d95b31ef7a566e18f42e360cab'
      abi: Poster
      startBlock: 7103940
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Post
        - Minion
      abis:
        - name: Poster
          file: ./abis/Poster.json
        - name: Minion
          file: ./abis/V2Minion.json
        - name: Moloch
          file: ./abis/V21Moloch.json
      eventHandlers:
        - event: 'NewPost(indexed address,string,indexed string)'
          handler: handleNewPost
      file: ./src/poster-mapping.ts
  - kind: ethereum/contract
    name: V2SafeMinionFactory
    network: goerli
    source:
      address: '0x121931c0Bc458A5f13F3861444AeB036cc8a5363'
      abi: V2SafeMinionFactory
      startBlock: 7021834
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Moloch
        - Minion
        - SafeMinion
      abis:
        - name: V2SafeMinionFactory
          file: ./abis/V2SafeMinionFactory.json
      eventHandlers:
        - event: >-
            SummonMinion(indexed address,indexed address,indexed
            address,string,string,uint256)
          handler: handleSummonedSafeMinionV2
      file: ./src/safe-minion-factory-mapping.ts
templates:
  - kind: ethereum/contract
    name: MolochV21Template
    network: goerli
    source:
      abi: V21Moloch
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/v2-mapping.ts
      entities:
        - Moloch
        - TokenBalance
        - Token
        - Member
        - Vote
        - Proposal
      abis:
        - name: V21Moloch
          file: ./abis/V21Moloch.json
        - name: Erc20
          file: ./abis/Erc20.json
        - name: Erc20Bytes32
          file: ./abis/Erc20Bytes32.json
      eventHandlers:
        - event: >-
            SubmitProposal(indexed
            address,uint256,uint256,uint256,address,uint256,address,string,bool[6],uint256,indexed
            address,indexed address)
          handler: handleSubmitProposal
        - event: >-
            SubmitVote(uint256,indexed uint256,indexed address,indexed
            address,uint8)
          handler: handleSubmitVote
        - event: >-
            SponsorProposal(indexed address,indexed
            address,uint256,uint256,uint256)
          handler: handleSponsorProposal
        - event: 'ProcessProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessProposal
        - event: 'ProcessGuildKickProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessGuildKickProposal
        - event: 'ProcessWhitelistProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessWhitelistProposal
        - event: 'UpdateDelegateKey(indexed address,address)'
          handler: handleUpdateDelegateKey
        - event: 'CancelProposal(indexed uint256,address)'
          handler: handleCancelProposal
        - event: 'Withdraw(indexed address,address,uint256)'
          handler: handleWithdraw
        - event: 'Ragequit(indexed address,uint256,uint256)'
          handler: handleRagequit
        - event: 'TokensCollected(indexed address,uint256)'
          handler: handleTokensCollected
  - kind: ethereum/contract
    name: MolochV22Template
    network: goerli
    source:
      abi: V22Moloch
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/v2-mapping.ts
      entities:
        - Moloch
        - TokenBalance
        - Token
        - Member
        - Vote
        - Proposal
        - Shaman
      abis:
        - name: V22Moloch
          file: ./abis/V22Moloch.json
        - name: Erc20
          file: ./abis/Erc20.json
        - name: Erc20Bytes32
          file: ./abis/Erc20Bytes32.json
      eventHandlers:
        - event: >-
            SubmitProposal(indexed
            address,uint256,uint256,uint256,address,uint256,address,string,bool[6],uint256,indexed
            address,indexed address)
          handler: handleSubmitProposal
        - event: >-
            SubmitVote(uint256,indexed uint256,indexed address,indexed
            address,uint8)
          handler: handleSubmitVote
        - event: >-
            SponsorProposal(indexed address,indexed
            address,uint256,uint256,uint256)
          handler: handleSponsorProposal
        - event: 'ProcessProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessProposal
        - event: 'ProcessGuildKickProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessGuildKickProposal
        - event: 'ProcessWhitelistProposal(indexed uint256,indexed uint256,bool)'
          handler: handleProcessWhitelistProposal
        - event: 'UpdateDelegateKey(indexed address,address)'
          handler: handleUpdateDelegateKey
        - event: 'CancelProposal(indexed uint256,address)'
          handler: handleCancelProposal
        - event: 'Withdraw(indexed address,address,uint256)'
          handler: handleWithdraw
        - event: 'Ragequit(indexed address,uint256,uint256)'
          handler: handleRagequit
        - event: 'TokensCollected(indexed address,uint256)'
          handler: handleTokensCollected
        - event: 'SetSpamPrevention(address,uint256)'
          handler: handleSpamPrevention
        - event: 'SetShaman(indexed address,bool)'
          handler: handleSetShaman
        - event: 'Shaman(indexed address,uint256,uint256,bool)'
          handler: handleShaman
  - kind: ethereum/contract
    name: SafeMinionTemplate
    network: goerli
    source:
      abi: SafeMinion
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/safe-minion-mapping.ts
      entities:
        - Moloch
        - Minion
        - Proposal
      abis:
        - name: SafeMinion
          file: ./abis/SafeMinion.json
      eventHandlers:
        - event: >-
            ProposeNewAction(indexed bytes32,indexed
            uint256,address,uint256,address,bool,bytes)
          handler: handleProposeAction
        - event: 'ExecuteAction(indexed bytes32,indexed uint256,bytes,address)'
          handler: handleExecuteAction
